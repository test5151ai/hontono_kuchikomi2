name: CI

on:
  push:
    branches: [ main, server-state ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123456
          POSTGRES_DB: hontono_kuchikomi_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm install

    - name: Prepare database for migrations
      working-directory: ./backend
      run: |
        echo "CREATE DATABASE IF NOT EXISTS hontono_kuchikomi_test;" > setup_db.sql
        PGPASSWORD=postgres123456 psql -h localhost -U postgres -c "SELECT 'CREATE DATABASE hontono_kuchikomi_test' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'hontono_kuchikomi_test')" -d postgres
      env:
        PGPASSWORD: postgres123456

    - name: Run database migrations
      working-directory: ./backend
      run: npx sequelize-cli db:migrate --migrations-path=./src/database/migrations
      env:
        DB_USER: postgres
        DB_PASSWORD: postgres123456
        DB_NAME: hontono_kuchikomi_test
        DB_HOST: localhost
        DB_PORT: 5432
        NODE_ENV: test

    - name: Run backend tests
      working-directory: ./backend
      run: npm test
      env:
        DB_USER: postgres
        DB_PASSWORD: postgres123456
        DB_NAME: hontono_kuchikomi_test
        DB_HOST: localhost
        DB_PORT: 5432
        NODE_ENV: test

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test 