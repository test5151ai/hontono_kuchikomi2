---
description: 
globs: 
alwaysApply: true
---
---
description: プロジェクト全体の作業手順とルール
globs: - "**/*"
alwaysApply: true
---

# 作業手順

## 質問対応時の手順
1. 会話履歴を検索して関連情報を確認
2. プロジェクトのドキュメントを参照
3. 必要に応じてコードベースも検索
4. これらの情報を総合して回答

## UI開発時の手順
1. AdminLTEのドキュメントを参照
2. 共通コンポーネントの使用を検討
3. レスポンシブ対応を確認
4. デザインの一貫性を維持
5. 既存のUIコンポーネントを再利用
6. アクセシビリティに配慮

# その他のルール

## コード編集時の手順
1. 編集対象ファイルの内容を確認
2. 関連するファイルの依存関係を確認
3. 変更内容を明確に説明
4. エラーハンドリングを考慮
5. テストの必要性を検討

## サーバー操作時の手順
1. 実行中のプロセスを確認
2. 必要に応じて既存のプロセスを停止
3. 新しいプロセスを起動
4. エラーが発生した場合は適切に対応

## コミット時の手順
1. 変更内容を確認
2. コミットメッセージを明確に記述
3. 必要に応じてブランチを作成
4. プッシュ前に最終確認

## ドキュメント更新時の手順
1. 既存のドキュメントを確認
2. 更新が必要な箇所を特定
3. 変更内容を明確に記述
4. 関連するドキュメントも確認

## PowerShellでのコマンド実行
- PowerShellでは`&&`を使ってコマンドを連結できないため、コマンドは個別に実行する必要があります。
  - 例: 
    ```shell
    git add .
    git commit -m "コミットメッセージ"
    ```

## 変更履歴の確認
- コミット前に、`git status`や`git diff`を使用して、実際の変更履歴を確認する。
- ステージングする前に、変更内容をしっかりと把握する。

## 現在のディレクトリの確認
- コマンドを実行する前に、`pwd`（PowerShellでは`Get-Location`）を使用して、現在のディレクトリを確認する。
- 必要に応じて、正しいディレクトリに移動してから作業を行う。

- 再起動はユーザーが行う